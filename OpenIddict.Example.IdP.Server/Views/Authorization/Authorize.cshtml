@using Microsoft.Extensions.Primitives
@using OpenIddict.Example.IdP.Server.ViewModels.Authorisation
@model AuthoriseViewModel

@{
    ViewData["Title"] = "Authorization";
}

<h1><span class="span-accent">[</span>OpenIddict.Example<span class="span-accent">]</span></h1>
<div class="container right-panel-active" id="container">

    <div class="form-container sign-up-container">
        <div class="form-wrapper">

            <h2>Authorize @Model.ApplicationName</h2>

            <form asp-controller="Authorization" asp-action="Authorize" method="post">
                @* Flow the request parameters so they can be received by the Accept/Reject actions: *@
                @foreach (var parameter in Context.Request.HasFormContentType ?
                (IEnumerable<KeyValuePair<string, StringValues>>)Context.Request.Form : Context.Request.Query)
                {
                    <input type="hidden" name="@parameter.Key" value="@parameter.Value" />
                }
                <button type="submit" class="btn btn-submit" name="submit.Accept" value="Yes">Yes</button>
                <button type="submit" class="btn btn-submit" name="submit.Deny" value="No">No</button>
            </form>
        </div>
    </div>
    <div class="overlay-container">
        <div class="overlay">
            <div class="overlay-panel overlay-left">
                <div class="social-container">
                    <p>
                        Do you want to grant @Model.ApplicationName access to your data? 
                    </p>
                    <p>
                        scopes requested: @Model.Scope
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>